<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" docName="draft-irtf-cfrg-aead-properties-02" ipr="trust200902" obsoletes="" updates="" submissionType="IETF" category="info" xml:lang="en" tocInclude="true" tocDepth="4" symRefs="true" sortRefs="true" version="3">
	<front>
		<title abbrev="Properties of AEAD algorithms">Properties of AEAD algorithms</title>
		<seriesInfo name="Internet-Draft" value="draft-irtf-cfrg-aead-properties-02" />
		<author fullname="Andrey Bozhko" initials="A.A." role="editor" surname="Bozhko">
			<organization>CryptoPro</organization>
			<address>
				<email>andbogc@gmail.com</email>
			</address>
		</author>
		<date year="2024" />
		<area>General</area>
		<workgroup>Network Working Group</workgroup>
		<keyword>authenticated encryption, mode of operation, AEAD, properties</keyword>
		<abstract>
			<t>
				Authenticated Encryption with Associated Data (AEAD) algorithms provide confidentiality and integrity of data. The extensive use of AEAD algorithms in various high-level applications has caused the need for AEAD algorithms with additional properties and motivated research in the area. This document gives definitions for the most common of those properties intending to improve consistency in the field.
			</t>
		</abstract>
	</front>
	<middle>
		<section anchor="Introduction" numbered="true" toc="default">
			<name>Introduction</name>
			<t>An Authenticated Encryption with Associated Data (AEAD) algorithm is an extension of authenticated encryption, which provides confidentiality for the plaintext to be encrypted and integrity for the plaintext and some Associated Data (sometimes called Header). AEAD algorithms are used in numerous applications and have become an important field in cryptographic research.</t>
			<section anchor="IntBack" numbered="true" toc="default">
				<name>Background</name>
				<t>
					AEAD algorithms are formally defined in <xref target="RFC5116" format="default"/>. The main benefit of AEAD algorithms is that they provide data confidentiality and integrity and have a simple unified interface.
				</t>
				<t>
					The importance of the AEAD algorithms is mainly explained by their exploitation simplicity: they have a unified interface, easy-to-understand security guarantees, and are much easier to implement properly than MAC and encryption schemes separately. Therefore, their embedding into high-level schemes and protocols is highly transparent since, for example, there is no need for additional key derivation procedures. Apart from that, when using the AEAD algorithm, it is possible to reduce the key and state sizes and improve the data processing speed. For instance, such algorithms are mandatory for TLS 1.3 <xref target="RFC8446" format="default" />, IPsec ESP <xref target="RFC4303" format="default" /><xref target="RFC8221" format="default" />, and QUIC <xref target="RFC9000" format="default" />. Hence, the research and standardization efforts in the field are extremely active. Most AEAD algorithms usually come with security guarantees, formal proofs, usage guidelines, and reference implementations.
				</t>
				<t>
					Even though providing core properties of AEAD algorithms is enough for many applications, some environments require other unusual cryptographic properties, which commonly require additional analysis and research. With the growing number of such properties and research papers, misunderstanding and confusion inevitably appear. Some properties might be understood in different ways; for some, only non-trivial formal security notions are provided, while others require modification or extension of the standard AEAD interface to support additional functionality. Therefore, the risk of misuse of AEAD algorithms increases, which can lead to security issues.
				</t>
			</section>
			<section anchor="IntScope" numbered="true" toc="default">
				<name>Scope</name>
				<t>
					In the following document, we provide a brief overview of the most common additional properties of AEAD algorithms by presenting high-level definitions of these properties in <xref target="Properties" format="default"/>. For each property, when possible, we furnish additional information such as synonymous notions, examples of algorithms that provide the property, applications that might necessitate such a property from an AEAD algorithm, and references for further reading. In the "Note" paragraph, we offer additional information that does not fit into these categories. In the "Security model" paragraph, we reference an informative source where a formal game-based security model is defined.
				</t>
				<t>
					The document's objective is to enhance clarity and establish a shared language in the field. However, the primary application of the document lies in the following two use cases within IETF documents:				
				</t>
				<ul>
					<li>
						<t>An RFC or I-D that defines an AEAD algorithm SHOULD employ the notations of <xref target="Properties" format="default"/> when listing additional properties of the algorithm.</t>
					</li>
					<li>
						<t>An RFC or I-D that defines a generic protocol based on an AEAD algorithm SHOULD use the notations of <xref target="Properties" format="default"/> if any additional properties are required from the algorithm.</t>
					</li>
				</ul>
			</section>
		</section>
		<section numbered="true" toc="default">
			<name>Conventions Used in This Document</name>
			<t>
				The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119" format="default" /><xref target="RFC8174" format="default" /> when, and only when, they appear in all capitals, as shown here.
			</t>
		</section>
		<section anchor="AEAD" numbered="true" toc="default">
			<name>AEAD Algorithms</name>
			<t>
				This section gives a general definition of an AEAD algorithm following <xref target="RFC5116" format="default"/>.
			</t>
			<t>
				Definition. An AEAD algorithm is defined by two operations, which are authenticated encryption and authenticated decryption:
			</t>
				<ul>
					<li>
						<t>A deterministic operation of authenticated encryption has four inputs, each a binary string: a secret key K of a fixed bit length, a nonce N, associated data A, and a plaintext P. The plaintext contains the data to be encrypted and authenticated, and the associated data contains the data to be authenticated only. Each nonce value must be unique in every distinct invocation of the operation for any particular value of the key. The authenticated encryption operation outputs a ciphertext C.</t>
					</li>
					<li>
						<t>A deterministic operation of authenticated decryption has four inputs, each a binary string: a secret key K of a fixed bit length, a nonce N, associated data A, and a ciphertext C. The operation verifies the integrity of the ciphertext and associated data and decrypts the ciphertext. It returns a special symbol FAIL if the inputs are not authentic; otherwise, the operation returns a plaintext P.</t>
					</li>
				</ul>
			<t>
				We note that specifications of AEAD algorithms that use authentication tags to ensure integrity may define it as an independent output of the encryption operation and as an independent input of the decryption operation. Throughout this document, by default, we will consider the authentication tag as part of the ciphertext unless stated otherwise.
			</t>	
			<t>
				For more details on the AEAD definition, please refer to <xref target="RFC5116" format="default" />.
			</t>
			<t>
				Throughout this document, by default, we will consider nonce-based AEAD algorithms, which have an interface from the definition above, and give no other restrictions on their structure. However, some properties defined in the document apply only to particular classes of such algorithms, like block cipher-based AEAD algorithms (such algorithms use block cipher as a building block). If that is the case, we explicitly point that out in the corresponding section.
			</t>
			<t>
				We note that in the literature, there are certain properties that, conversely, require an extension of the standard AEAD interface. We refer to these properties as "Additional Functionality Properties" and label an extension of an AEAD algorithm that provides such a property as an "AEAD algorithm with additional functionality." In this document, we do not primarily concentrate on these properties and their corresponding classes. However, for the sake of completeness, in <xref target="AddProp" format="default"/>, we briefly present two examples of AEAD algorithms with additional functionality.
			</t>
			<t>
				We will call an AEAD algorithm secure if it provides such properties as Confidentiality and Data integrity, defined in <xref target="Base" format="default"/>, against any active nonce-respecting adversary. Even though we aim to give high-level definitions, we sometimes use the advantage notion. Specifically, we will use the Authenticated Encryption advantage notion. We adopt the corresponding definition from <xref target="I-D.irtf-cfrg-aead-limits" format="default"/>.
			</t>
			<t>
				Definition. Authenticated Encryption advantage is the probability of an active adversary succeeding in breaking the authenticated-encryption properties of the AEAD algorithm. In this document, the definition of authenticated encryption advantage roughly is the probability that an attacker successfully distinguishes the ciphertext outputs of the AEAD scheme from the outputs of a random function or is able to forge a ciphertext that will be accepted as valid.
			</t>
		</section>
		<section anchor="Properties" numbered="true" toc="default">
			<name>AEAD Properties</name>
			<section anchor="Classification" numbered="true" toc="default">
				<name>Classification of additional AEAD Properties</name>
				<t>
					In this document we use a high-level classification of additional properties. The classification aims to give an intuition on how one can benefit from the property. The additional properties fall into one of these three categories:
				</t>
				<ul>
					<li>
						<t>
							Security properties. We say that the property is a security property if it considers new threats or adversarial capabilities, in addition to those of the usual nonce-respecting adversary, which aims to break confidentiality or data integrity.
						</t>
					</li>
					<li>
						<t>
							Implementation properties. We say that the property is an implementation property if it allows for more efficient implementations of the AEAD algorithm in special cases or environments.
						</t>
					</li>
					<li>
						<t>
							Additional functionality properties. We say that the property is an additional functionality property if it provides new features in addition to the regular authenticated encryption with associated data.
						</t>
					</li>
				</ul>
				<t>
					We notice that the distinction between the security and additional functionality properties might be vague. The convention in this document is that additional functionality requires some extension of the standard AEAD interface. Each additional functionality property defines a new class of algorithms, which is not a subclass of regular AEAD. Hence, the basic threats and adversarial capabilities must be redefined for each of these classes. As a result, additional functionality properties consider the basic threats and adversarial capabilities for their class of algorithms and, in contrast to security properties, not the extended ones. For that reason we are not focusing on additional functionality properties, they are not discussed in this section. In section <xref target="AddProp" format="default"/>, some examples of AEAD algorithms with additional functionality are provided.
				</t>
			</section>
      
			<section anchor="Base" numbered="true" toc="default">
				<name>Basic Properties</name>
				<section anchor="Conf" numbered="true" toc="default">
					<name>Confidentiality</name>
					<t>
						Definition. An AEAD algorithm guarantees that the plaintext is available only to those authorized to obtain it, i.e., those possessing the secret key. That property is required for the AEAD algorithm to be called secure.
					</t>
					<t>
						Synonyms. Privacy.
					</t>
					<t>
						Further reading. <xref target="R2002" format="default"/>, <xref target="BN2000" format="default"/>
					</t>
				</section>

				<section anchor="Int" numbered="true" toc="default">
					<name>Data Integrity</name>
					<t>
						Definition. An AEAD algorithm guarantees that the plaintext and the associated data have not been changed or forged by those not authorized to, i.e., those not possessing the secret key. That property is required for the AEAD algorithm to be called secure.
					</t>
					<t>
						Synonyms. Message authentication.
					</t>
					<t>
						Further reading. <xref target="R2002" format="default"/>, <xref target="BN2000" format="default"/>
					</t>
				</section>
			</section>

			<section anchor="SecurityProp" numbered="true" toc="default">
				<name>Security Properties</name>
				<section anchor="BWsec" numbered="true" toc="default">
					<name>Blockwise Security</name>
					<t>
						Definition. An AEAD algorithm provides security even if an adversary can adaptively choose the next part of the plaintext depending on already computed ciphertext parts during an encryption operation.
					</t>
					<t>
						Security models. D-LORS-BCPA for confidentiality, B-INT-CTXT for integrity <xref target="EV16" format="default"/>; OAE1 <xref target="HRRV15" format="default"/> (stronger model; originally, OAE in <xref target="FFL12" format="default"/>). 
					</t>
					<t>
						Examples. Deoxys [TODO], SAEF <xref target="ABV21" format="default"/>.
					</t>
					<t>
						Note. Blockwise security is highly relevant for online AEAD algorithms (see <xref target="Online" format="default"/>). OAE1 (OAE) security model <xref target="HRRV15" format="default"/>, and OAE2 model <xref target="HRRV15" format="default"/> are tailored for online AEAD algorithms. Blockwise security follows from security in the OAE model <xref target="EV16" format="default"/>. For discussion on security notions for online AEAD algorithms see <xref target="HRRV15" format="default"/>.	
					</t>	
					<t>	
						The case when an adversary can adaptively choose the next block of the ciphertext depending on already computed blocks of the plaintext, which appear in the device memory before the integrity verification during the decryption, can also be considered. This case is strongly related to RUP security, defined in <xref target="RUP" format="default"/>.
					</t>
					<t>
						Applications. Streaming, encryption on constrained Internet-of-Things devices with constant latency and with smart cards.
					</t>
					<t>
						Further reading. <xref target="EV16" format="default"/>, <xref target="JMV2002" format="default"/>, <xref target="FJMV2004" format="default"/>, <xref target="HRRV15" format="default"/>
					</t>
				</section>
				
				<section anchor="FullComm" numbered="true" toc="default">
					<name>Full Commitment</name>
					<t>
						Definition. An AEAD algorithm guarantees that it is difficult to find two or more different tuples of the key, nonce, associated data, and plaintext such that they encrypt to the same ciphertext. In other words, an AEAD scheme guarantees that a ciphertext is a commitment to all inputs of an authenticated encryption operation.
					</t>
					<t>
						Security models. CMT-4 <xref target="BH22" format="default"/>.
					</t>
					<t>
						Examples. ASCON [TODO]<xref target="YSS23" format="default"/>, full commiting versions of GCM and GCM-SIV <xref target="BH22" format="default"/>, generic constructions from <xref target="BH22" format="default"/><xref target="CR22" format="default" />.
					</t>
					<t>
						Note. Full commitment can be considered in a weaker setting, where certain restrictions on the tuples produced by an adversary are imposed <xref target="MLGR23" format="default" />. For instance, an adversary must find tuples that all share the same associated data value. In such cases, an AEAD algorithm is said to provide full (key) commitment in a restricted setting. The imposed restrictions MUST be listed.
					</t>
					<t>
						Applications. Message franking <xref target="GLR17" format="default" />.
					</t>
					<t>
						Further reading.
						<xref target="BH22" format="default" />, <xref target="CR22" format="default" />, <xref target="MLGR23" format="default" />.
					</t>
				</section>
				<section anchor="KeyComm" numbered="true" toc="default">
					<name>Key Commitment</name>
					<t>
						Definition. An AEAD algorithm guarantees that it is difficult to find two or more different keys and the same number of potentially equal triples of nonce, associated data, and plaintext such that they encrypt to the same ciphertext under corresponding keys. In other words, an AEAD scheme guarantees that a ciphertext is a commitment to the key used for an authenticated encryption operation.
					</t>
					<t>
						Security models. CMT-1 <xref target="BH22" format="default"/>.
					</t>
					<t>
						Examples. ASCON [TODO]<xref target="YSS23" format="default"/>, generic constructions from <xref target="BH22" format="default"/>,<xref target="CR22" format="default"/>.
					</t>
					<t>
						Synonyms. Key-robustness,  key collision resistance.
					</t>
					<t>
						Notes. Key commitment follows from full commitment. Full commitment does not follow form key commitment <xref target="BH22" format="default" />.
					</t>
					<t>
						Applications. Password-Authenticated Key Exchange, password-based encryption <xref target="LGR21" format="default" />, key rotation, envelope encryption <xref target="ADGKLS22" format="default" />.
					</t>
					<t>
						Further reading.
						<xref target="BH22" format="default" />,<xref target="CR22" format="default" />, <xref target="FOR17" format="default" />, <xref target="LGR21" format="default" />, <xref target="GLR17" format="default" />
					</t>
				</section>
				<section anchor="KDM" numbered="true" toc="default">
					<name>Key Dependent Messages (KDM) Security</name>
					<t>
						Definition. An AEAD algorithm provides security even when key-dependent plaintexts are encrypted.
					</t>
					<t>
						Notes. KDM security is achievable only if nonces are chosen randomly and associated data is key-independent.
					</t>
					<t>
						Applications. Disk encryption schemes <xref target="BK2011" format="default"/>.
					</t>
					<t>
						Further reading.
						<xref target="BK2011" format="default" />
					</t>
				</section>
				<section anchor="Leakage" numbered="true" toc="default">
					<name>Leakage Resistance</name>
					<t>
						Definition. An AEAD algorithm provides security even if some additional information about computations of an encryption (and possibly decryption) operation is obtained via side-channel leakages.
					</t>
					<t>
						Security models. CIL1 <xref target="GPPS19" format="default" /> (CIML2 <xref target="BPPS17" format="default" /> with leakages in decryption) for intergity, CCAL1 <xref target="GPPS19" format="default" /> (CCAmL2 <xref target="GPPS19" format="default" /> with leakages in decryption) for Authenticated Encryption security. 
					</t>
					<t>
						Examples. ASCON [TODO] (integrity with leakages in both encryption and decryption operations, confidentiality with leakages in encryption), TEDT <xref target="GPPS19" format="default" />.
					</t>
					<t>
						Applications. Encryption on smart cards, Internet-of-things devices or other constrained devices.  	
					</t>
					<t>
						Note. Leakages during AEAD operations executions are implementation-dependent. It is possible to implement symmetric algorithms in a way that every possible physical leakage is completely independent of the secret inputs of the algorithm (for example, with a masking technique [TODO]). However, such implementations are very resource-consuming. In a case when an AEAD can achieve leakage resistance only with such an implementation, we don't say that it provides leakage resistance since it is considered that an adversary doesn't obtain any additional information via side-channel leakages from such implementations. Leakage-resistant AEAD algorithms aim to place as mild requirements on implementation as possible to achieve leakage resistance. These requirements SHOULD be listed.          
					</t>	
					<t>
						Confidentiality of plaintext in the presence of leakages in the encryption operation is unachievable if an adversary can repeat the nonce used to encrypt the plaintext in other encryption queries. Confidentiality can be achieved only for plaintexts encrypted with fresh nonces (analogically to nonce-misuse resilience, see <xref target="NM" format="default" />). For discussion see <xref target="GPPS19" format="default" /> and <xref target="B20" format="default" />.  
					</t>
					<t>					
						For primitive-based AEAD algorithms, key evolution (internal re-keying [TODO]) can contribute to achieving leakage resistance without leakages in decryption. Confidentiality in the presence of decryption leakages can be achieved by two-pass AEAD algorithms with key evolution, which compute independent ephemeral key values for encryption and tag generation, where the computation of these keys is implemented without any leakages. For more discussions on achieving leakage resistance see <xref target="B20" format="default" />.                  
					</t>
					<t>
						Further reading. <xref target="GPPS19" format="default" />, <xref target="B20" format="default" />, <xref target="BPPS17" format="default" />.
					</t>
				</section>
				<section anchor="Mu-sec" numbered="true" toc="default">
					<name>Multi-User Security</name>
					<t>
						Definition. An AEAD algorithm Authenticated Encryption advantage increases sublinearly in the number of users.
					</t>
					<t>
						Further reading. <xref target="BT16" format="default" />
					</t>
				</section>
				<section anchor="NonceHiding" numbered="true" toc="default">
					<name>Nonce-Hiding</name>
					<t>
						Definition. An AEAD algorithm provides confidentiality for the nonce value used to encrypt a plaintext.
					</t>
					<t>
						Note. The decryption operation in a nonce-hiding AEAD algorithm does not require the nonce as input. In nonce-hiding AEAD algorithms, the ciphertext contains information equivalent to an encrypted nonce.
					</t>
					<t>
						Further reading.
						<xref target="BNT19" format="default" />
					</t>
				</section>
				<section anchor="NM" numbered="true" toc="default">
					<name>Nonce Misuse</name>
					<t>
						Definition. An AEAD algorithm provides security (resilience or resistance) even if an adversary can repeat nonces in its encryption queries. Nonce misuse resilience and resistance are defined as follows:
					</t>
					<ul>
						<li>
							<t>Nonce misuse resilience. Security is provided only for messages encrypted with unique nonces.</t>
						</li>
						<li>
							<t>Nonce misuse resistance. Security is provided for all messages.</t>
						</li>
					</ul>
					<t>
						Further reading.
						<xref target="RS06" format="default" />, <xref target="ADL17" format="default" />
					</t>
				</section>
				
				<section anchor="Quantum" numbered="true" toc="default">
					<name>Quantum Security</name>
					<t>
						Definition. An AEAD algorithm provides security (in a Q1 or Q2 model) against a quantum adversary. Q1 and Q2 models are defined as follows:
					</t>
					<ul>
						<li>
							<t>Q1 model.  An adversary has access to local quantum computational power. It has classical access to encryption and decryption oracles.</t>
							
							<t>Synonyms. Post-quantum security.</t>
							
							<t>Examples. AES-GCM [TODO], ChaCha20-Poly1305 [TODO], OCB [TODO], MGM [TODO], AEGIS [TODO].</t>
						</li>
						<li>
							<t>Q2 model. An adversary has access to local quantum computational power. It has quantum access to encryption and decryption oracles; it can query encryption and decryption oracles with quantum superpositions of inputs to receive quantum superpositions of the outputs.</t>
							
							<t>Synonyms. Superposition-based quantum security.</t>
							
							<t>Examples. QCB <xref target="BBCLNSS21" format="default" />.</t>
						</li>
					</ul>
					<t>
						Note. Most symmetric cryptographic algorithms that are secure in the classical model provide quantum security in the Q1 model, i.e., they are post-quantum secure. Security in the Q1 setting corresponds to security against "harvest now, decrypt later" attacks. 
					</t>
					<t>
						Further reading. <xref target="KLLNP16" format="default" />, <xref target="BBCLNSS21" format="default" />, <xref target="G17" format = "default"/>
					</t>
				</section>
				
				<section anchor="Reforg" numbered="true" toc="default">
					<name>Reforgeability Resilience</name>
					<t>
						Definition. An AEAD algorithm guarantees that once a successful forgery for the algorithm has been found, it is still hard to find any subsequent forgery.
					</t>
					<t>
						Examples. Deoxys [TODO], AEGIS [TODO].
					</t>
					<t>
						Functional applications. VoIP, video streaming in a lightweight setting <xref target="BC09" format="default" /><xref target="FLLW17" format="default" />.
					</t>
					<t>
						Further reading.
						<xref target="BC09" format="default" />, <xref target="FLLW17" format="default" />
					</t>
				</section>
				<section anchor="RUP" numbered="true" toc="default">
					<name>Release of Unverified Plaintext (RUP) Security</name>
					<t>
						Definition. An AEAD algorithm provides data integrity even if the plaintext is released for every ciphertext, including those with failed integrity verification.
					</t>
					<t>
						Functional applications. Decryption with limited memory <xref target="FJMV2004" format="default" />, CMS protocols <xref target="RFC5652" format="default" />.
					</t>
					<t>
						Further reading.
						<xref target="A14" format="default" />
					</t>
				</section>
			</section>
			<section anchor="ImpProp" numbered="true" toc="default">
				<name>Implementation Properties</name>
				<section anchor="Inverse" numbered="true" toc="default">
					<name>Inverse-Free</name>
					<t>
						Definition. A primitive-based AEAD algorithm can be securely implemented without evaluating the primitive inverse.
					</t>
					<t>
						Note. In a sponge-based AEAD algorithm, an underlying permutation is viewed as a primitive.
					</t>
					<t>
						Examples. AES-GCM [TODO], ChaCha20-Poly1305 [TODO], OCB [TODO], MGM [TODO]
					</t>
				</section>
				<section anchor="Lightweight" numbered="true" toc="default">
					<name>Lightweight</name>
					<t>
						Definition. An AEAD algorithm can be efficiently and securely implemented on resource-constrained devices. In particular, it meets the criteria required in the NIST Lightweight Cryptography competition <xref target="MBTM17" format="default" />.
					</t>
					<t>
						Further reading.
						<xref target="MBTM17" format="default" />
					</t>
				</section>
				<section anchor="Online" numbered="true" toc="default">
					<name>Online</name>
					<t>
						Definition. An AEAD algorithm encryption (decryption) operation can be implemented with a constant memory usage and a single one-direction pass over the plaintext (ciphertext), writing out the result during that pass.
					</t>
					<t>
						Further reading.
						<xref target="HRRV15" format="default" />, <xref target="FJMV2004" format="default" />
					</t>
				</section>
				<section anchor="Parallelizable" numbered="true" toc="default">
					<name>Parallelizable</name>
					<t>
						Definition. An AEAD algorithm can fully exploit the parallel computation infrastructure.
					</t>
					<t>Synonyms. Pipelineable.</t>
					<t>
						Further reading.
						<xref target="C20" format="default" />
					</t>
				</section>
				<section anchor="SinglePass" numbered="true" toc="default">
					<name>Single Pass</name>
					<t>
						Definition. An AEAD algorithm encryption (decryption) operation can be implemented with a single pass over the plaintext (ciphertext).
					</t>
				</section>
				<section anchor="StaticAD" numbered="true" toc="default">
					<name>Static Associated Data</name>
					<t>
						Definition. An AEAD algorithm allows pre-computation for static (or repeating) associated data so that static AD doesn't significantly contribute to the computational cost of encryption.
					</t>
				</section>
				<section anchor="ZK" numbered="true" toc="default">
					<name>ZK-Friendly</name>
					<t>
						Definition. An AEAD algorithm operates on binary and prime fields with a low number of non-linear operations (often called multiplicative complexity). Thus, it allows efficient implementation using a domain-specific language (DSL) for writing zk-SNARKs circuits.
					</t>
					<t>
						Example. Ciminion with Wegman-Carter MAC <xref target="DGGK21" format="default"/>
					</t>
					<t>
						Synonyms. ZK-focused, Arithmetization-oriented, Low Multiplicative Complexity
					</t>
					<t>
						Further reading.
						<xref target="DGGK21" format="default" />
					</t>
				</section>
			</section>
		</section>
		<section anchor="AddProp" numbered="true" toc="default">
			<name>AEAD Algorithms with Additional Functionality</name>
			<t>
				TODO: Introduction. The basic properties for each of these AEAD classes differ from the basic properties of convenient AEADs.
			</t>
			<section anchor="Incremental" numbered="true" toc="default">
				<name>Incremental</name>
				<t>
					Definition. An AEAD algorithm allows encrypting and authenticating a message (associated data and a plaintext pair), which only partly differs from some previous message, faster than processing it from scratch.
				</t>
				<t>
					Further reading.
					<xref target="SY16" format="default" />, <xref target="BKY02" format="default" />
				</t>
			</section>
			<section anchor="Robust" numbered="true" toc="default">
				<name>Robust</name>
				<t>
					Definition. An AEAD algorithm allows the user to choose an arbitrary value l &gt;= 0 for every plaintext and then encrypts it into a ciphertext, which is l bits longer.
				</t>
				<t>
					Further reading.
					<xref target="HKR2015" format="default" />
				</t>
			</section>
		</section>
		<section anchor="Security" numbered="true" toc="default">
			<name>Security Considerations</name>
			<t>
				This document defines the properties of AEAD algorithms. However, the document does not describe any concrete mechanisms providing these properties, neither it describes how to achieve them. In fact, one can claim that an AEAD algorithm provides any of the defined properties only if its analysis in the relevant models was carried out.
			</t>
		</section>
		<section anchor="IANACON" numbered="true" toc="default">
			<name>IANA Considerations</name>
			<t>This document has no IANA actions.</t>
		</section>
	</middle>
	<back>
		<references>
			<name>References</name>
			<references>
				<name>Normative References</name>
				<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml" />
				<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml" />
				<xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5116.xml" />
			</references>
			<references>
				<name>Informative References</name>
				<xi:include href="https://datatracker.ietf.org/doc/bibxml3/draft-irtf-cfrg-aead-limits.xml" />
				<reference anchor="R2002">
					<front>
						<title>Authenticated-encryption with associated-data.</title>
						<author initials="P." surname="Rogaway" fullname="Phillip Rogaway" />
						<date year="2002" />
					</front>
					<seriesInfo name="DOI" value="10.1145/586110.586125" />
					<refcontent>Proceedings of the 9th ACM conference on Computer and communications security (CCS '02)</refcontent>
					<refcontent>Association for Computing Machinery, New York, NY, USA, 98–107</refcontent>
				</reference>
				<reference anchor="BN2000">
					<front>
						<title>Authenticated Encryption: Relations among Notions and Analysis of the Generic Composition Paradigm</title>
						<author initials="M." surname="Bellare" fullname="Mihir Bellare" />
						<author initials="C." surname="Namprempre" fullname="Chanathip Namprempre" />
						<date year="2000" />
					</front>
					<seriesInfo name="DOI" value="10.1007/s00145-008-9026-x" />
					<refcontent>Proceedings of ASIACRYPT 2000, Springer-Verlag, LNCS 1976, pp. 531-545</refcontent>
				</reference>
				<reference anchor="JMV2002">
					<front>
						<title>Blockwise-Adaptive Attackers Revisiting the (In)Security of Some Provably Secure Encryption Modes: CBC, GEM, IACBC</title>
						<author initials="A." surname="Joux" fullname="Antoine Joux" />
						<author initials="G." surname="Martinet" fullname="Gwenaelle Martinet" />
						<author initials="F." surname="Valette" fullname="Frederic Valette" />
						<date year="2002" />
					</front>
					<seriesInfo name="DOI" value="10.1007/3-540-45708-9_2" />
					<refcontent>Advances in Cryptology — CRYPTO 2002. CRYPTO 2002. Lecture Notes in Computer Science, vol 2442. Springer, Berlin, Heidelberg</refcontent>
				</reference>
				<reference anchor="FJMV2004">
					<front>
						<title>Authenticated On-Line Encryption</title>
						<author initials="PA." surname="Valette" fullname="Pierre-Alain Fouque" />
						<author initials="A." surname="Joux" fullname="Antoine Joux" />
						<author initials="G." surname="Martinet" fullname="Gwenaelle Martinet" />
						<author initials="F." surname="Valette" fullname="Frederic Valette" />
						<date year="2004" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-540-24654-1_11" />
					<refcontent>Selected Areas in Cryptography. SAC 2003. Lecture Notes in Computer Science, vol 3006. Springer, Berlin, Heidelberg.</refcontent>
				</reference>
				<reference anchor="BK2011">
					<front>
						<title>Authenticated and Misuse-Resistant Encryption of Key-Dependent Data</title>
						<author initials="M." surname="Bellare" fullname="Mihir Bellare" />
						<author initials="S." surname="Keelveedhi" fullname="Sriram Keelveedhi" />
						<date year="2011" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-642-22792-9_35" />
					<refcontent>Advances in Cryptology – CRYPTO 2011. CRYPTO 2011. Lecture Notes in Computer Science, vol 6841. Springer, Berlin, Heidelberg.</refcontent>
				</reference>
				<reference anchor="FOR17">
					<front>
						<title>Authenticated and Misuse-Resistant Encryption of Key-Dependent DataSecurity of Symmetric Primitives under Incorrect Usage of Keys</title>
						<author initials="P." surname="Farshim" fullname="Pooya Farshim" />
						<author initials="C." surname="Orlandi" fullname="Claudio Orlandi" />
						<author initials="R." surname="Rosie" fullname="Razvan Rosie" />
						<date year="2017" />
					</front>
					<seriesInfo name="DOI" value="10.13154/tosc.v2017.i1.449-473" />
					<refcontent>IACR Transactions on Symmetric Cryptology, 2017(1), 449–473.</refcontent>
				</reference>
				<reference anchor="LGR21">
					<front>
						<title>Partitioning Oracle Attacks</title>
						<author initials="J." surname="Len" fullname="Julia Len" />
						<author initials="P." surname="Grubbs" fullname="Paul Grubbs" />
						<author initials="T." surname="Ristenpart" fullname="Thomas Ristenpart" />
						<date year="2021" />
					</front>
					<refcontent>30th USENIX Security Symposium (USENIX Security 21), 195--212</refcontent>
				</reference>
				<reference anchor="GLR17">
					<front>
						<title>Message Franking via Committing Authenticated Encryption.</title>
						<author initials="P." surname="Grubbs" fullname="Paul Grubbs" />
						<author initials="J." surname="Lu" fullname="Jiahui Lu" />
						<author initials="T." surname="Ristenpart" fullname="Thomas Ristenpart" />
						<date year="2017" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-319-63697-9_3" />
					<refcontent>Advances in Cryptology – CRYPTO 2017. CRYPTO 2017. Lecture Notes in Computer Science, vol 10403. Springer, Cham</refcontent>
				</reference>
				<reference anchor="B20">
					<front>
						<title>Mode-Level vs. Implementation-Level Physical Security in Symmetric Cryptography: A Practical Guide Through the Leakage-Resistance Jungle</title>
						<author initials="D." surname="Bellizia" fullname="Davide Bellizia" />
						<author initials="O." surname="Bronchain" fullname="Olivier Bronchain" />
						<author initials="G." surname="Cassiers" fullname="Gaëtan Cassiers" />
						<author initials="V." surname="Grosso" fullname="Vincent Grosso" />
						<author initials="C." surname="Guo" fullname="Chun Guo" />
						<author initials="C." surname="Momin" fullname="Charles Momin" />
						<author initials="O." surname="Pereira" fullname="Olivier Pereira" />
						<author initials="T." surname="Peters" fullname="Thomas Peters" />
						<author initials="FX." surname="Standaert" fullname="François-Xavier Standaert" />
						<date year="2020" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-030-56784-2_13" />
					<refcontent>Advances in Cryptology – CRYPTO 2020. CRYPTO 2020. Lecture Notes in Computer Science, vol 12170. Springer, Cham</refcontent>
				</reference>
				<reference anchor="GPPS19">
					<front>
						<title>Authenticated Encryption with Nonce Misuse and Physical Leakages: Definitions, Separation Results and Leveled Constructions</title>
						<author initials="C." surname="Guo" fullname="Chun Guo" />
						<author initials="O." surname="Pereira" fullname="Olivier Pereira" />
						<author initials="T." surname="Peters" fullname="Thomas Peters" />
						<author initials="FX." surname="Standaert" fullname="François-Xavier Standaert" />
						<date year="2019" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-030-30530-7_8" />
					<refcontent>Progress in Cryptology – LATINCRYPT 2019. LATINCRYPT 2019. Lecture Notes in Computer Science, vol 11774. Springer, Cham</refcontent>
				</reference>
				<reference anchor="BT16">
					<front>
						<title>The Multi-User Security of Authenticated Encryption: AES-GCM in TLS 1.3</title>
						<author initials="M." surname="Bellare" fullname="Mihir Bellare" />
						<author initials="B." surname="Tackmann" fullname="Björn Tackmann" />
						<date year="2016" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-662-53018-4_10" />
					<refcontent>Advances in Cryptology – CRYPTO 2016. CRYPTO 2016. Lecture Notes in Computer Science, vol 9814. Springer, Berlin, Heidelberg</refcontent>
				</reference>
				<reference anchor="RS06">
					<front>
						<title>A Provable-Security Treatment of the Key-Wrap Problem</title>
						<author initials="R." surname="Rogaway" fullname="Phillip Rogaway" />
						<author initials="T." surname="Shrimpton" fullname="Thomas Shrimpton" />
						<date year="2016" />
					</front>
					<seriesInfo name="DOI" value="10.1007/11761679_23" />
					<refcontent>Advances in Cryptology - EUROCRYPT 2006. EUROCRYPT 2006. Lecture Notes in Computer Science, vol 4004. Springer, Berlin, Heidelberg</refcontent>
				</reference>
				<reference anchor="ADL17">
					<front>
						<title>Boosting Authenticated Encryption Robustness with Minimal Modifications</title>
						<author initials="T." surname="Ashur" fullname="Tomer Ashur" />
						<author initials="O." surname="Dunkelman" fullname="Orr Dunkelman" />
						<author initials="A." surname="Luykx" fullname="Atul Luykx" />
						<date year="2017" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-319-63697-9_1" />
					<refcontent>Advances in Cryptology – CRYPTO 2017. CRYPTO 2017. Lecture Notes in Computer Science, vol 10403. Springer, Cham</refcontent>
				</reference>
				<reference anchor="FLLW17">
					<front>
						<title>Reforgeability of Authenticated Encryption Schemes</title>
						<author initials="C." surname="Forler" fullname="Christian Forler" />
						<author initials="E." surname="List" fullname="Eik List" />
						<author initials="S." surname="Lucks" fullname="Stefan Lucks" />
						<author initials="J." surname="Wenzel" fullname="Jakob Wenzel" />
						<date year="2017" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-319-59870-3_2" />
					<refcontent>Information Security and Privacy. ACISP 2017. Lecture Notes in Computer Science, vol 10343. Springer, Cham</refcontent>
				</reference>
				<reference anchor="BC09">
					<front>
						<title>MAC Reforgeability</title>
						<author initials="C." surname="Forler" fullname="John Black" />
						<author initials="E." surname="List" fullname="Martin Cochran" />
						<date year="2009" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-642-03317-9_21" />
					<refcontent>Fast Software Encryption. FSE 2009. Lecture Notes in Computer Science, vol 5665. Springer, Berlin, Heidelberg</refcontent>
				</reference>
				<reference anchor="A14">
					<front>
						<title>How to Securely Release Unverified Plaintext in Authenticated Encryption</title>
						<author initials="C." surname="Forler" fullname="Elena Andreeva" />
						<author initials="E." surname="List" fullname="Andrey Bogdanov" />
						<author initials="C." surname="Forler" fullname="Atul Luykx" />
						<author initials="E." surname="List" fullname="Bart Mennink" />
						<author initials="E." surname="List" fullname="Nicky Mouha" />
						<author initials="E." surname="List" fullname="Kan Yasuda " />
						<date year="2014" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-662-45611-8_6" />
					<refcontent>Advances in Cryptology – ASIACRYPT 2014. ASIACRYPT 2014. Lecture Notes in Computer Science, vol 8873. Springer, Berlin, Heidelberg</refcontent>
				</reference>
				<reference anchor="MBTM17">
					<front>
						<title>Report on Lightweight Cryptography</title>
						<author initials="K." surname="McKay" fullname="Kerry A. McKay" />
						<author initials="L." surname="Bassham" fullname="Larry Bassham" />
						<author initials="MS." surname="Turan" fullname="Meltem Sönmez Turan" />
						<author initials="N." surname="Mouha" fullname="Nicky Mouha" />
						<date year="2017" />
					</front>
					<seriesInfo name="DOI" value="10.6028/NIST.IR.8114" />
				</reference>
				<reference anchor="HRRV15">
					<front>
						<title>Online Authenticated-Encryption and its Nonce-Reuse Misuse-Resistance</title>
						<author initials="VT." surname="Hoang" fullname="Viet Tung Hoang" />
						<author initials="R." surname="Reyhanitabar" fullname="Reza Reyhanitabar" />
						<author initials="P." surname="Rogaway" fullname="Phillip Rogaway" />
						<author initials="D." surname="Vizár" fullname="Damian Vizár" />
						<date year="2015" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-662-47989-6_24" />
					<refcontent>Advances in Cryptology -- CRYPTO 2015. CRYPTO 2015. Lecture Notes in Computer Science, vol 9215. Springer, Berlin, Heidelberg</refcontent>
				</reference>
				<reference anchor="C20">
					<front>
						<title>INT-RUP Secure Lightweight Parallel AE Modes</title>
						<author initials="A." surname="Chakraborti" fullname="Avik Chakraborti" />
						<author initials="N." surname="Datta" fullname="Nilanjan Datta" />
						<author initials="A." surname="Jha" fullname="Ashwin Jha" />
						<author initials="C." surname="Mancillas-López" fullname="Cuauhtemoc Mancillas-López" />
						<author initials="M." surname="Nandi" fullname="Mridul Nandi" />
						<author initials="Y." surname="Sasaki" fullname="Yu Sasaki" />
						<date year="2020" />
					</front>
					<seriesInfo name="DOI" value="10.13154/tosc.v2019.i4.81-118" />
					<refcontent>IACR Transactions on Symmetric Cryptology, 2019(4), 81–118</refcontent>
				</reference>
				<reference anchor="DGGK21">
					<front>
						<title>CIMINION: Symmetric Encryption Based on Toffoli-Gates over Large Finite Fields</title>
						<author initials="C." surname="Dobraunig" fullname="Christoph Dobraunig" />
						<author initials="L." surname="Grassi" fullname="Lorenzo Grassi" />
						<author initials="G." surname="Guinet" fullname="Anna Guinet" />
						<author initials="K." surname="Kuijsters" fullname="Daniël Kuijsters" />
						<date year="2021" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-030-77886-6_1" />
					<refcontent>Advances in Cryptology – EUROCRYPT 2021. EUROCRYPT 2021. Lecture Notes in Computer Science(), vol 12697. Springer, Cham</refcontent>
				</reference>
				<reference anchor="BKY02">
					<front>
						<title>Incremental Unforgeable Encryption</title>
						<author initials="E." surname="Buonanno" fullname="Enrico Buonanno" />
						<author initials="J." surname="Katz" fullname="Jonathan Katz" />
						<author initials="M." surname="Yung" fullname="Moti Yung" />
						<date year="2002" />
					</front>
					<seriesInfo name="DOI" value="10.1007/3-540-45473-X_9" />
					<refcontent>Fast Software Encryption. FSE 2001. Lecture Notes in Computer Science, vol 2355. Springer, Berlin, Heidelberg</refcontent>
				</reference>
				<reference anchor="SY16">
					<front>
						<title>A New Mode of Operation for Incremental Authenticated Encryption with Associated Data</title>
						<author initials="Y." surname="Sasaki" fullname="Yu Sasaki" />
						<author initials="K." surname="Yasuda" fullname="Kan Yasuda" />
						<date year="2016" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-319-31301-6_23" />
					<refcontent>Selected Areas in Cryptography – SAC 2015. SAC 2015. Lecture Notes in Computer Science(), vol 9566. Springer, Cham</refcontent>
				</reference>
				<reference anchor="BNT19">
					<front>
						<title>Nonces Are Noticed: AEAD Revisited</title>
						<author initials="M." surname="Bellare" fullname="Mihir Bellare" />
						<author initials="R." surname="Ng" fullname="Ruth Ng" />
						<author initials="B." surname="Tackmann" fullname="Björn Tackmann" />
						<date year="2019" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-030-26948-7_9" />
					<refcontent>Advances in Cryptology – CRYPTO 2019. CRYPTO 2019. Lecture Notes in Computer Science, vol 11692. Springer, Cham</refcontent>
				</reference>
				<reference anchor="BH22">
					<front>
						<title>Efficient schemes for committing authenticated encryption.</title>
						<author initials="M." surname="Bellare" fullname="Mihir Bellare" />
						<author initials="V.T." surname="Hoang" fullname="Viet Tung Hoang" />
						<date year="2022" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-031-07085-3_29" />
					<refcontent>Advances in Cryptology – EUROCRYPT 2022. EUROCRYPT 2022. Lecture Notes in Computer Science, vol 13276. Springer, Cham.</refcontent>
				</reference>
				<reference anchor="CR22">
					<front>
						<title>On Committing Authenticated-Encryption.</title>
						<author initials="J." surname="Chan" fullname="John Chan" />
						<author initials="P." surname="Rogaway" fullname="Phillip Rogaway" />
						<date year="2022" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-031-17146-8_14" />
					<refcontent>Computer Security – ESORICS 2022. ESORICS 2022. Lecture Notes in Computer Science, vol 13555. Springer, Cham.</refcontent>
				</reference>
				<reference anchor="BFN98">
					<front>
						<title>A formal treatment of remotely keyed encryption</title>
						<author initials="M." surname="Blaze" fullname="Matt Blaze" />
						<author initials="J." surname="Feigenbaum" fullname="Joan Feigenbaum" />
						<author initials="M." surname="Naor" fullname="Moni Naor" />
						<date year="1998" />
					</front>
					<seriesInfo name="DOI" value="10.1007/BFb0054131" />
					<refcontent>Advances in Cryptology — EUROCRYPT'98. EUROCRYPT 1998. Lecture Notes in Computer Science, vol 1403. Springer, Berlin, Heidelberg</refcontent>
				</reference>
				<reference anchor="DA03">
					<front>
						<title>Concealment and Its Applications to Authenticated Encryption</title>
						<author initials="Y." surname="Dodis" fullname="Yevgeniy Dodis" />
						<author initials="JH." surname="An" fullname="Jee Hea An" />
						<date year="2003" />
					</front>
					<seriesInfo name="DOI" value="10.1007/3-540-39200-9_19" />
					<refcontent>Advances in Cryptology — EUROCRYPT 2003. EUROCRYPT 2003. Lecture Notes in Computer Science, vol 2656. Springer, Berlin, Heidelberg</refcontent>
				</reference>
				<reference anchor="HKR2015">
					<front>
						<title>Robust Authenticated-Encryption AEZ and the Problem That It Solves</title>
						<author initials="VT." surname="Hoang" fullname="Viet Tung Hoang" />
						<author initials="T." surname="Krovetz" fullname="Ted Krovetz" />
						<author initials="P." surname="Rogaway" fullname="Phillip Rogaway" />
						<date year="2015" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-662-46800-5_2" />
					<refcontent>Advances in Cryptology -- EUROCRYPT 2015. EUROCRYPT 2015. Lecture Notes in Computer Science(), vol 9056. Springer, Berlin, Heidelberg.</refcontent>
				</reference>
				<reference anchor="MLGR23">
					<front>
						<title>Robust Authenticated-Encryption AEZ and the Problem That It Solves</title>
						<author initials="S." surname="Menda" fullname="Sanketh Menda" />
						<author initials="J." surname="Julia" fullname="Julia Len" />
						<author initials="P." surname="Grubbs" fullname="Paul Grubbs" />
						<author initials="T." surname="Ristenpart" fullname="Thomas Ristenpart" />
						<date year="2023" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-031-30634-1_13" />
					<refcontent>Advances in Cryptology – EUROCRYPT 2023. EUROCRYPT 2023. Lecture Notes in Computer Science, vol 14007. Springer, Cham.</refcontent>
				</reference>
				
				<reference anchor="BBCLNSS21">
					<front>
						<title>QCB: Efficient Quantum-Secure Authenticated Encryption</title>
						<author initials="R." surname="Bhaumik" fullname="Ritam Bhaumik" />
						<author initials="X." surname="Bonnetain" fullname="Xavier Bonnetain" />
						<author initials="A." surname="Chailloux" fullname="André Chailloux" />
						<author initials="G." surname="Leurent" fullname="Gaëtan Leurent" />
						<author initials="M." surname="Naya-Plasencia" fullname="María Naya-Plasencia" />
						<author initials="A." surname="Schrottenlohe" fullname="André Schrottenlohe" />
						<author initials="Y." surname="Seurin" fullname="Yannick Seurin" />
						<date year="2021" />
					</front>
					<seriesInfo name="DOI" value="10.1007/978-3-030-92062-3_23" />
					<refcontent>Advances in Cryptology – ASIACRYPT 2021. ASIACRYPT 2021. Lecture Notes in Computer Science(), vol 13090. Springer, Cham.</refcontent>
				</reference>
				
				<reference anchor="KLLNP16">
					<front>
						<title>Quantum Differential and Linear Cryptanalysis</title>
						<author initials="M." surname="Menda" fullname="Marc Kaplan" />
						<author initials="G." surname="Leurent" fullname="Gaëtan Leurent" />
						<author initials="A." surname="Leverrier" fullname="Anthony Leverrier" />
						<author initials="M." surname="Naya-Plasencia" fullname="María Naya-Plasencia" />
						<date year="2021" />
					</front>
					<seriesInfo name="DOI" value="10.13154/tosc.v2016.i1.71-94" />
					<refcontent> IACR Transactions on Symmetric Cryptology, 2016(1), 71–94.</refcontent>
				</reference>
				
				<reference anchor="G17">
					<front>
						<title>Quantum Security of Cryptographic Primitives</title>
						<author initials="T." surname="Gagliardoni" fullname="Tommaso Gagliardoni"/>
						<date year="2017"/>
					</front>
					<refcontent>Ph.D. Thesis, Technische Universität Darmstadt</refcontent>
				</reference>
				
				<reference anchor="EV16">
					<front>
						<title>Linking Online Misuse-Resistant Authenticated Encryption and Blockwise Attack Models</title>
						<author initials="G." surname="Endignoux" fullname="Guillaume Endignoux"/>
						<author initials="D." surname="Vizár" fullname="Damian Vizár"/>
						<date year="2016"/>
					</front>
					<refcontent>IACR Transactions on Symmetric Cryptology</refcontent>
				</reference>
				
				<reference anchor="FFL12">
					<front>
						<title>McOE: A family of almost foolproof on-line authenticated encryption schemes</title>
						<author initials="E." surname="Fleischmann" fullname="Ewan Fleischmann"/>
						<author initials="C." surname="Forler" fullname="Christian Forler"/>
						<author initials="S." surname="Lucks" fullname="Stefan Lucks"/>
						<date year="2012"/>
					</front>
					<refcontent>Fast Software Encryption: 19th International Workshop, FSE 2012, Washington, DC, USA, March 19-21, 2012. Revised Selected Papers. Springer Berlin Heidelberg, 2012</refcontent>
				</reference>
				
				<reference anchor="ABV21">
					<front>
						<title>Nonce-misuse security of the SAEF authenticated encryption mode.</title>
						<author initials="E." surname="Andreeva" fullname="Elena Andreeva"/>
						<author initials="A.S." surname="Bhati" fullname="Amit Singh Bhati"/>
						<author initials="D." surname="Vizár" fullname="Damian Vizár"/>
						<date year="2021"/>
					</front>
					<refcontent>Selected Areas in Cryptography: 27th International Conference, Halifax, NS, Canada (Virtual Event), October 21-23, 2020, Revised Selected Papers 27. Springer International Publishing, 2021</refcontent>
				</reference>
				
				<reference anchor="YSS23">
					<front>
						<title>Committing Security of Ascon: Cryptanalysis on Primitive and Proof on Mode.</title>
						<author initials="Y." surname="Naito" fullname="Yusuke Naito"/>
						<author initials="Y." surname="Sasaki" fullname="Yu Sasaki"/>
						<author initials="T." surname="Sugawara" fullname="Takeshi Sugawara"/>
						<date year="2023"/>
					</front>
					<refcontent>IACR Transactions on Symmetric Cryptology 2023, no. 4 (2023): 420-451</refcontent>
				</reference>
				
				<reference anchor="ADGKLS22">
					<front>
						<title>How to abuse and fix authenticated encryption without key commitment.</title>
						<author initials="A." surname="Albertini" fullname="Ange Albertini"/>
						<author initials="T." surname="Duong" fullname="Thai Duong"/>
						<author initials="S." surname="Gueron" fullname="Shay Gueron"/>
						<author initials="S." surname="Kölbl" fullname="Stefan Kölbl"/>
						<author initials="A." surname="Luykx" fullname="Atul Luykx"/>
						<author initials="S." surname="Schmieg" fullname="Sophie Schmieg"/>
						<date year="2022"/>
					</front>
					<refcontent>1st USENIX Security Symposium (USENIX Security 22), pp. 3291-3308. 2022</refcontent>
				</reference>
				
				<reference anchor="BPPS17">
					<front>
						<title>On leakage-resilient authenticated encryption with decryption leakages.</title>
						<author initials="F." surname="Berti" fullname="Francesco Berti" />
						<author initials="O." surname="Pereira" fullname="Olivier Pereira" />
						<author initials="T." surname="Peters" fullname="Thomas Peters" />
						<author initials="F.X." surname="Standaert" fullname="François-Xavier Standaert" />
						<date year="2017" />
					</front>
					<refcontent>IACR Transactions on Symmetric Cryptology (2017): 271-293</refcontent>
				</reference>
				
				<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml" />
				<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4303.xml" />
				<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8221.xml" />
				<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9000.xml" />
				<xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5652.xml" />
			</references>
		</references>
		<section anchor="contributors" numbered="true" toc="default">
			<name>Contributors</name>
		</section>
	</back>
</rfc>