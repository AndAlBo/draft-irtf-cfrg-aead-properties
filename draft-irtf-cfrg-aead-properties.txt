



Network Working Group                                   A.A. Bozhko, Ed.
Internet-Draft                                                 CryptoPro
Intended status: Informational                           24 January 2024
Expires: 27 July 2024


                     Properties of AEAD algorithms
                   draft-irtf-cfrg-aead-properties-02

Abstract

   Authenticated Encryption with Associated Data (AEAD) algorithms
   provide confidentiality and integrity of data.  The extensive use of
   AEAD algorithms in various high-level applications has caused the
   need for AEAD algorithms with additional properties and motivated
   research in the area.  This document gives definitions for the most
   common of those properties intending to improve consistency in the
   field.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 27 July 2024.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.











Bozhko                    Expires 27 July 2024                  [Page 1]

Internet-Draft        Properties of AEAD algorithms         January 2024


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  Background  . . . . . . . . . . . . . . . . . . . . . . .   3
     1.2.  Scope . . . . . . . . . . . . . . . . . . . . . . . . . .   4
   2.  Conventions Used in This Document . . . . . . . . . . . . . .   4
   3.  AEAD Algorithms . . . . . . . . . . . . . . . . . . . . . . .   4
   4.  AEAD Properties . . . . . . . . . . . . . . . . . . . . . . .   6
     4.1.  Classification of additional AEAD Properties  . . . . . .   6
     4.2.  Basic Properties  . . . . . . . . . . . . . . . . . . . .   7
       4.2.1.  Confidentiality . . . . . . . . . . . . . . . . . . .   7
       4.2.2.  Data Integrity  . . . . . . . . . . . . . . . . . . .   7
     4.3.  Security Properties . . . . . . . . . . . . . . . . . . .   7
       4.3.1.  Blockwise Security  . . . . . . . . . . . . . . . . .   7
       4.3.2.  Full Commitment . . . . . . . . . . . . . . . . . . .   8
       4.3.3.  Key Commitment  . . . . . . . . . . . . . . . . . . .   9
       4.3.4.  Key Dependent Messages (KDM) Security . . . . . . . .   9
       4.3.5.  Leakage Resistance  . . . . . . . . . . . . . . . . .   9
       4.3.6.  Multi-User Security . . . . . . . . . . . . . . . . .  10
       4.3.7.  Nonce-Hiding  . . . . . . . . . . . . . . . . . . . .  11
       4.3.8.  Nonce Misuse  . . . . . . . . . . . . . . . . . . . .  11
       4.3.9.  Quantum Security  . . . . . . . . . . . . . . . . . .  12
       4.3.10. Reforgeability Resilience . . . . . . . . . . . . . .  12
       4.3.11. Release of Unverified Plaintext (RUP) Security  . . .  13
     4.4.  Implementation Properties . . . . . . . . . . . . . . . .  13
       4.4.1.  Inverse-Free  . . . . . . . . . . . . . . . . . . . .  13
       4.4.2.  Lightweight . . . . . . . . . . . . . . . . . . . . .  13
       4.4.3.  Online  . . . . . . . . . . . . . . . . . . . . . . .  13
       4.4.4.  Parallelizable  . . . . . . . . . . . . . . . . . . .  13
       4.4.5.  Single Pass . . . . . . . . . . . . . . . . . . . . .  14
       4.4.6.  Static Associated Data  . . . . . . . . . . . . . . .  14
       4.4.7.  ZK-Friendly . . . . . . . . . . . . . . . . . . . . .  14
   5.  AEAD Algorithms with Additional Functionality . . . . . . . .  14
     5.1.  Incremental . . . . . . . . . . . . . . . . . . . . . . .  14
     5.2.  Robust  . . . . . . . . . . . . . . . . . . . . . . . . .  14
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  15
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  15
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  15
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .  15



Bozhko                    Expires 27 July 2024                  [Page 2]

Internet-Draft        Properties of AEAD algorithms         January 2024


     8.2.  Informative References  . . . . . . . . . . . . . . . . .  15
   Appendix A.  Contributors . . . . . . . . . . . . . . . . . . . .  22
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  22

1.  Introduction

   An Authenticated Encryption with Associated Data (AEAD) algorithm is
   an extension of authenticated encryption, which provides
   confidentiality for the plaintext to be encrypted and integrity for
   the plaintext and some Associated Data (sometimes called Header).
   AEAD algorithms are used in numerous applications and have become an
   important field in cryptographic research.

1.1.  Background

   AEAD algorithms are formally defined in [RFC5116].  The main benefit
   of AEAD algorithms is that they provide data confidentiality and
   integrity and have a simple unified interface.

   The importance of the AEAD algorithms is mainly explained by their
   exploitation simplicity: they have a unified interface, easy-to-
   understand security guarantees, and are much easier to implement
   properly than MAC and encryption schemes separately.  Therefore,
   their embedding into high-level schemes and protocols is highly
   transparent since, for example, there is no need for additional key
   derivation procedures.  Apart from that, when using the AEAD
   algorithm, it is possible to reduce the key and state sizes and
   improve the data processing speed.  For instance, such algorithms are
   mandatory for TLS 1.3 [RFC8446], IPsec ESP [RFC4303][RFC8221], and
   QUIC [RFC9000].  Hence, the research and standardization efforts in
   the field are extremely active.  Most AEAD algorithms usually come
   with security guarantees, formal proofs, usage guidelines, and
   reference implementations.

   Even though providing core properties of AEAD algorithms is enough
   for many applications, some environments require other unusual
   cryptographic properties, which commonly require additional analysis
   and research.  With the growing number of such properties and
   research papers, misunderstanding and confusion inevitably appear.
   Some properties might be understood in different ways; for some, only
   non-trivial formal security notions are provided, while others
   require modification or extension of the standard AEAD interface to
   support additional functionality.  Therefore, the risk of misuse of
   AEAD algorithms increases, which can lead to security issues.







Bozhko                    Expires 27 July 2024                  [Page 3]

Internet-Draft        Properties of AEAD algorithms         January 2024


1.2.  Scope

   In the following document, we provide a brief overview of the most
   common additional properties of AEAD algorithms by presenting high-
   level definitions of these properties in Section 4.  For each
   property, when possible, we furnish additional information such as
   synonymous notions, examples of algorithms that provide the property,
   applications that might necessitate such a property from an AEAD
   algorithm, and references for further reading.  In the "Note"
   paragraph, we offer additional information that does not fit into
   these categories.  In the "Security model" paragraph, we reference an
   informative source where a formal game-based security model is
   defined.

   The document's objective is to enhance clarity and establish a shared
   language in the field.  However, the primary application of the
   document lies in the following two use cases within IETF documents:

   *  For an RFC or I-D that defines an AEAD algorithm it is RECOMMENDED
      to employ the notations of Section 4 when listing additional
      properties of the algorithm.

   *  For an RFC or I-D that defines a generic protocol based on an AEAD
      algorithm it is RECOMMENDED to use the notations of Section 4 if
      any additional properties are required from the algorithm.

2.  Conventions Used in This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119][RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  AEAD Algorithms

   This section gives a general definition of an AEAD algorithm
   following [RFC5116].

   Definition.  An AEAD algorithm is defined by two operations, which
   are authenticated encryption and authenticated decryption:










Bozhko                    Expires 27 July 2024                  [Page 4]

Internet-Draft        Properties of AEAD algorithms         January 2024


   *  A deterministic operation of authenticated encryption has four
      inputs, each a binary string: a secret key K of a fixed bit
      length, a nonce N, associated data A, and a plaintext P.  The
      plaintext contains the data to be encrypted and authenticated, and
      the associated data contains the data to be authenticated only.
      Each nonce value must be unique in every distinct invocation of
      the operation for any particular value of the key.  The
      authenticated encryption operation outputs a ciphertext C.

   *  A deterministic operation of authenticated decryption has four
      inputs, each a binary string: a secret key K of a fixed bit
      length, a nonce N, associated data A, and a ciphertext C.  The
      operation verifies the integrity of the ciphertext and associated
      data and decrypts the ciphertext.  It returns a special symbol
      FAIL if the inputs are not authentic; otherwise, the operation
      returns a plaintext P.

   We note that specifications of AEAD algorithms that use
   authentication tags to ensure integrity may define it as an
   independent output of the encryption operation and as an independent
   input of the decryption operation.  Throughout this document, by
   default, we will consider the authentication tag as part of the
   ciphertext unless stated otherwise.

   For more details on the AEAD definition, please refer to [RFC5116].

   Throughout this document, by default, we will consider nonce-based
   AEAD algorithms, which have an interface from the definition above,
   and give no other restrictions on their structure.  However, some
   properties defined in the document apply only to particular classes
   of such algorithms, like block cipher-based AEAD algorithms (such
   algorithms use block cipher as a building block).  If that is the
   case, we explicitly point that out in the corresponding section.

   We note that in the literature, there are certain properties that,
   conversely, require an extension of the standard AEAD interface.  We
   refer to these properties as "Additional Functionality Properties"
   and label an extension of an AEAD algorithm that provides such a
   property as an "AEAD algorithm with additional functionality."  In
   this document, we do not primarily concentrate on these properties
   and their corresponding classes.  However, for the sake of
   completeness, in Section 5, we briefly present two examples of AEAD
   algorithms with additional functionality.

   We will call an AEAD algorithm secure if it provides such properties
   as Confidentiality and Data integrity, defined in Section 4.2,
   against any active nonce-respecting adversary.  Even though we aim to
   give high-level definitions, we sometimes use the advantage notion.



Bozhko                    Expires 27 July 2024                  [Page 5]

Internet-Draft        Properties of AEAD algorithms         January 2024


   Specifically, we will use the Authenticated Encryption advantage
   notion.  We adopt the corresponding definition from
   [I-D.irtf-cfrg-aead-limits].

   Definition.  Authenticated Encryption advantage is the probability of
   an active adversary succeeding in breaking the authenticated-
   encryption properties of the AEAD algorithm.  In this document, the
   definition of authenticated encryption advantage roughly is the
   probability that an attacker successfully distinguishes the
   ciphertext outputs of the AEAD scheme from the outputs of a random
   function or is able to forge a ciphertext that will be accepted as
   valid.

4.  AEAD Properties

4.1.  Classification of additional AEAD Properties

   In this document we use a high-level classification of additional
   properties.  The classification aims to give an intuition on how one
   can benefit from the property.  The additional properties fall into
   one of these three categories:

   *  Security properties.  We say that the property is a security
      property if it considers new threats or adversarial capabilities,
      in addition to those of the usual nonce-respecting adversary,
      which aims to break confidentiality or data integrity.

   *  Implementation properties.  We say that the property is an
      implementation property if it allows for more efficient
      implementations of the AEAD algorithm in special cases or
      environments.

   *  Additional functionality properties.  We say that the property is
      an additional functionality property if it provides new features
      in addition to the regular authenticated encryption with
      associated data.















Bozhko                    Expires 27 July 2024                  [Page 6]

Internet-Draft        Properties of AEAD algorithms         January 2024


   We notice that the distinction between the security and additional
   functionality properties might be vague.  The convention in this
   document is that additional functionality requires some extension of
   the standard AEAD interface.  Each additional functionality property
   defines a new class of algorithms, which is not a subclass of regular
   AEAD.  Hence, the basic threats and adversarial capabilities must be
   redefined for each of these classes.  As a result, additional
   functionality properties consider the basic threats and adversarial
   capabilities for their class of algorithms and, in contrast to
   security properties, not the extended ones.  For that reason we are
   not focusing on additional functionality properties, they are not
   discussed in this section.  In section Section 5, some examples of
   AEAD algorithms with additional functionality are provided.

4.2.  Basic Properties

4.2.1.  Confidentiality

   Definition.  An AEAD algorithm guarantees that the plaintext is
   available only to those authorized to obtain it, i.e., those
   possessing the secret key.  That property is required for the AEAD
   algorithm to be called secure.

   Synonyms.  Privacy.

   Further reading.  [R2002], [BN2000]

4.2.2.  Data Integrity

   Definition.  An AEAD algorithm guarantees that the plaintext and the
   associated data have not been changed or forged by those not
   authorized to, i.e., those not possessing the secret key.  That
   property is required for the AEAD algorithm to be called secure.

   Synonyms.  Message authentication.

   Further reading.  [R2002], [BN2000]

4.3.  Security Properties

4.3.1.  Blockwise Security

   Definition.  An AEAD algorithm provides security even if an adversary
   can adaptively choose the next part of the plaintext depending on
   already computed ciphertext parts during an encryption operation.






Bozhko                    Expires 27 July 2024                  [Page 7]

Internet-Draft        Properties of AEAD algorithms         January 2024


   Security models.  D-LORS-BCPA for confidentiality, B-INT-CTXT for
   integrity [EV16]; OAE1 [HRRV15] (stronger model; originally, OAE in
   [FFL12]).

   Examples.  Deoxys [TODO], SAEF [ABV21].

   Note.  Blockwise security is highly relevant for online AEAD
   algorithms (see Section 4.4.3).  OAE1 (OAE) security model [HRRV15],
   and OAE2 model [HRRV15] are tailored for online AEAD algorithms.
   Blockwise security follows from security in the OAE model [EV16].
   For discussion on security notions for online AEAD algorithms see
   [HRRV15].

   The case when an adversary can adaptively choose the next block of
   the ciphertext depending on already computed blocks of the plaintext,
   which appear in the device memory before the integrity verification
   during the decryption, can also be considered.  This case is strongly
   related to RUP security, defined in Section 4.3.11.

   Applications.  Streaming, encryption on constrained Internet-of-
   Things devices with constant latency and with smart cards.

   Further reading.  [EV16], [JMV2002], [FJMV2004], [HRRV15]

4.3.2.  Full Commitment

   Definition.  An AEAD algorithm guarantees that it is difficult to
   find two or more different tuples of the key, nonce, associated data,
   and plaintext such that they encrypt to the same ciphertext.  In
   other words, an AEAD scheme guarantees that a ciphertext is a
   commitment to all inputs of an authenticated encryption operation.

   Security models.  CMT-4 [BH22].

   Examples.  ASCON [TODO][YSS23], full commiting versions of GCM and
   GCM-SIV [BH22], generic constructions from [BH22][CR22].

   Note.  Full commitment can be considered in a weaker setting, where
   certain restrictions on the tuples produced by an adversary are
   imposed [MLGR23].  For instance, an adversary must find tuples that
   all share the same associated data value.  In such cases, an AEAD
   algorithm is said to provide full (key) commitment in a restricted
   setting.  The imposed restrictions MUST be listed.

   Applications.  Message franking [GLR17].

   Further reading.  [BH22], [CR22], [MLGR23].




Bozhko                    Expires 27 July 2024                  [Page 8]

Internet-Draft        Properties of AEAD algorithms         January 2024


4.3.3.  Key Commitment

   Definition.  An AEAD algorithm guarantees that it is difficult to
   find two or more different keys and the same number of potentially
   equal triples of nonce, associated data, and plaintext such that they
   encrypt to the same ciphertext under corresponding keys.  In other
   words, an AEAD scheme guarantees that a ciphertext is a commitment to
   the key used for an authenticated encryption operation.

   Security models.  CMT-1 [BH22].

   Examples.  ASCON [TODO][YSS23], generic constructions from
   [BH22],[CR22].

   Synonyms.  Key-robustness, key collision resistance.

   Notes.  Key commitment follows from full commitment.  Full commitment
   does not follow form key commitment [BH22].

   Applications.  Password-Authenticated Key Exchange, password-based
   encryption [LGR21], key rotation, envelope encryption [ADGKLS22].

   Further reading.  [BH22],[CR22], [FOR17], [LGR21], [GLR17]

4.3.4.  Key Dependent Messages (KDM) Security

   Definition.  An AEAD algorithm provides security even when key-
   dependent plaintexts are encrypted.

   Notes.  KDM security is achievable only if nonces are chosen randomly
   and associated data is key-independent.

   Applications.  Disk encryption schemes [BK2011].

   Further reading.  [BK2011]

4.3.5.  Leakage Resistance

   Definition.  An AEAD algorithm provides security even if some
   additional information about computations of an encryption (and
   possibly decryption) operation is obtained via side-channel leakages.

   Security models.  CIL1 [GPPS19] (CIML2 [BPPS17] with leakages in
   decryption) for intergity, CCAL1 [GPPS19] (CCAmL2 [GPPS19] with
   leakages in decryption) for Authenticated Encryption security.






Bozhko                    Expires 27 July 2024                  [Page 9]

Internet-Draft        Properties of AEAD algorithms         January 2024


   Examples.  ASCON [TODO] (integrity with leakages in both encryption
   and decryption operations, confidentiality with leakages in
   encryption), TEDT [GPPS19].

   Applications.  Encryption on smart cards, Internet-of-things devices
   or other constrained devices.

   Note.  Leakages during AEAD operations executions are implementation-
   dependent.  It is possible to implement symmetric algorithms in a way
   that every possible physical leakage is completely independent of the
   secret inputs of the algorithm (for example, with a masking technique
   [TODO]).  However, such implementations are very resource-consuming.
   In a case when an AEAD can achieve leakage resistance only with such
   an implementation, we don't say that it provides leakage resistance
   since it is considered that an adversary doesn't obtain any
   additional information via side-channel leakages from such
   implementations.  Leakage-resistant AEAD algorithms aim to place as
   mild requirements on implementation as possible to achieve leakage
   resistance.  These requirements SHOULD be listed.

   Confidentiality of plaintext in the presence of leakages in the
   encryption operation is unachievable if an adversary can repeat the
   nonce used to encrypt the plaintext in other encryption queries.
   Confidentiality can be achieved only for plaintexts encrypted with
   fresh nonces (analogically to nonce-misuse resilience, see
   Section 4.3.8).  For discussion see [GPPS19] and [B20].

   For primitive-based AEAD algorithms, key evolution (internal re-
   keying [TODO]) can contribute to achieving leakage resistance without
   leakages in decryption.  Confidentiality in the presence of
   decryption leakages can be achieved by two-pass AEAD algorithms with
   key evolution, which compute independent ephemeral key values for
   encryption and tag generation, where the computation of these keys is
   implemented without any leakages.  For more discussions on achieving
   leakage resistance see [B20].

   Further reading.  [GPPS19], [B20], [BPPS17].

4.3.6.  Multi-User Security

   Definition.  An AEAD algorithm Authenticated Encryption advantage
   increases sublinearly in the number of users.

   Security model. mu-ind [BT16].

   Examples.  AES-GCM [TODO][HTT18][LMP17], ChaCha20-Poly1305
   [TODO][DGGP21], AES-GCM-SIV [BHT18], AEGIS [TODO].




Bozhko                    Expires 27 July 2024                 [Page 10]

Internet-Draft        Properties of AEAD algorithms         January 2024


   Applications.  Data transimission layer of secure communication
   protocols (e.g., TLS, IPSec, SRTP, etc.)

   Note.  It holds that for any AEAD algorithm, Authenticated Encryption
   security degrades no worse than linearly.  However, for some
   applications with a significant number of users, better multi-user
   guarantees are required.  For example, in the TLS 1.3 protocol, to
   address this issue, AEAD algorithms are used with a randomized nonce
   (deterministically derived from a traffic secret and a sequence
   number).  Using nonce randomization in block-cipher counter-based
   AEAD modes can contribute to multi-user security [BT16].  Multi-user
   usage limits for AES-GCM and ChaCha20-Poly1305 are provided in
   [I-D.irtf-cfrg-aead-limits].

   Further reading.  [BT16], [HTT18], [LMP17],[DGGP21], [BHT18]

4.3.7.  Nonce-Hiding

   Definition.  An AEAD algorithm provides confidentiality for the nonce
   value used to encrypt plaintext.  The algorithm includes information
   equivalent to the encrypted nonce in the ciphertext and doesn't
   require the nonce as input for the decryption operation.

   Example.  Hide-Nonce (HN) transforms [BNT19].

   Security model.  AE2 [BNT19].

   Applications.  Any application that can't rely on a secure "out-of-
   band" nonce communication.

   Note.  As discussed in [BNT19], adversary-visible nonces might
   compromise message and user privacy, similar to the way any metadata
   might do.  As pointed out in [D13], even using a counter as a nonce
   value might compromise privacy.  Designing a privacy-preserving way
   to manage nonces might be a challenging problem for an application.
   TODO: Can I cite [TODO]?

   Further reading.  [BNT19].

4.3.8.  Nonce Misuse

   Definition.  An AEAD algorithm provides security (resilience or
   resistance) even if an adversary can repeat nonces in its encryption
   queries.  Nonce misuse resilience and resistance are defined as
   follows:

   *  Nonce misuse resilience.  Security is provided only for messages
      encrypted with unique nonces.



Bozhko                    Expires 27 July 2024                 [Page 11]

Internet-Draft        Properties of AEAD algorithms         January 2024


   *  Nonce misuse resistance.  Security is provided for all messages.

   Further reading.  [RS06], [ADL17]

4.3.9.  Quantum Security

   Definition.  An AEAD algorithm provides security (in a Q1 or Q2
   model) against a quantum adversary.  Q1 and Q2 models are defined as
   follows:

   *  Q1 model.  An adversary has access to local quantum computational
      power.  It has classical access to encryption and decryption
      oracles.

      Synonyms.  Post-quantum security.

      Examples.  AES-GCM [TODO], ChaCha20-Poly1305 [TODO], OCB [TODO],
      MGM [TODO], AEGIS [TODO].

   *  Q2 model.  An adversary has access to local quantum computational
      power.  It has quantum access to encryption and decryption
      oracles; it can query encryption and decryption oracles with
      quantum superpositions of inputs to receive quantum superpositions
      of the outputs.

      Synonyms.  Superposition-based quantum security.

      Examples.  QCB [BBCLNSS21].

   Note.  Most symmetric cryptographic algorithms that are secure in the
   classical model provide quantum security in the Q1 model, i.e., they
   are post-quantum secure.  Security in the Q1 setting corresponds to
   security against "harvest now, decrypt later" attacks.

   Further reading.  [KLLNP16], [BBCLNSS21], [G17]

4.3.10.  Reforgeability Resilience

   Definition.  An AEAD algorithm guarantees that once a successful
   forgery for the algorithm has been found, it is still hard to find
   any subsequent forgery.

   Examples.  Deoxys [TODO], AEGIS [TODO].

   Functional applications.  VoIP, video streaming in a lightweight
   setting [BC09][FLLW17].

   Further reading.  [BC09], [FLLW17]



Bozhko                    Expires 27 July 2024                 [Page 12]

Internet-Draft        Properties of AEAD algorithms         January 2024


4.3.11.  Release of Unverified Plaintext (RUP) Security

   Definition.  An AEAD algorithm provides data integrity even if the
   plaintext is released for every ciphertext, including those with
   failed integrity verification.

   Functional applications.  Decryption with limited memory [FJMV2004],
   CMS protocols [RFC5652].

   Further reading.  [A14]

4.4.  Implementation Properties

4.4.1.  Inverse-Free

   Definition.  A primitive-based AEAD algorithm can be securely
   implemented without evaluating the primitive inverse.

   Note.  In a sponge-based AEAD algorithm, an underlying permutation is
   viewed as a primitive.

   Examples.  AES-GCM [TODO], ChaCha20-Poly1305 [TODO], OCB [TODO], MGM
   [TODO]

4.4.2.  Lightweight

   Definition.  An AEAD algorithm can be efficiently and securely
   implemented on resource-constrained devices.  In particular, it meets
   the criteria required in the NIST Lightweight Cryptography
   competition [MBTM17].

   Further reading.  [MBTM17]

4.4.3.  Online

   Definition.  An AEAD algorithm encryption (decryption) operation can
   be implemented with a constant memory usage and a single one-
   direction pass over the plaintext (ciphertext), writing out the
   result during that pass.

   Further reading.  [HRRV15], [FJMV2004]

4.4.4.  Parallelizable

   Definition.  An AEAD algorithm can fully exploit the parallel
   computation infrastructure.

   Synonyms.  Pipelineable.



Bozhko                    Expires 27 July 2024                 [Page 13]

Internet-Draft        Properties of AEAD algorithms         January 2024


   Further reading.  [C20]

4.4.5.  Single Pass

   Definition.  An AEAD algorithm encryption (decryption) operation can
   be implemented with a single pass over the plaintext (ciphertext).

4.4.6.  Static Associated Data

   Definition.  An AEAD algorithm allows pre-computation for static (or
   repeating) associated data so that static AD doesn't significantly
   contribute to the computational cost of encryption.

4.4.7.  ZK-Friendly

   Definition.  An AEAD algorithm operates on binary and prime fields
   with a low number of non-linear operations (often called
   multiplicative complexity).  Thus, it allows efficient implementation
   using a domain-specific language (DSL) for writing zk-SNARKs
   circuits.

   Example.  Ciminion with Wegman-Carter MAC [DGGK21]

   Synonyms.  ZK-focused, Arithmetization-oriented, Low Multiplicative
   Complexity

   Further reading.  [DGGK21]

5.  AEAD Algorithms with Additional Functionality

   TODO: Introduction.  The basic properties for each of these AEAD
   classes differ from the basic properties of convenient AEADs.

5.1.  Incremental

   Definition.  An AEAD algorithm allows encrypting and authenticating a
   message (associated data and a plaintext pair), which only partly
   differs from some previous message, faster than processing it from
   scratch.

   Further reading.  [SY16], [BKY02]

5.2.  Robust

   Definition.  An AEAD algorithm allows the user to choose an arbitrary
   value l >= 0 for every plaintext and then encrypts it into a
   ciphertext, which is l bits longer.




Bozhko                    Expires 27 July 2024                 [Page 14]

Internet-Draft        Properties of AEAD algorithms         January 2024


   Further reading.  [HKR2015]

6.  Security Considerations

   This document defines the properties of AEAD algorithms.  However,
   the document does not describe any concrete mechanisms providing
   these properties, neither it describes how to achieve them.  In fact,
   one can claim that an AEAD algorithm provides any of the defined
   properties only if its analysis in the relevant models was carried
   out.

7.  IANA Considerations

   This document has no IANA actions.

8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC5116]  McGrew, D., "An Interface and Algorithms for Authenticated
              Encryption", RFC 5116, DOI 10.17487/RFC5116, January 2008,
              <https://www.rfc-editor.org/info/rfc5116>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

8.2.  Informative References

   [A14]      Forler, C., List, E., Forler, C., List, E., List, E., and
              E. List, "How to Securely Release Unverified Plaintext in
              Authenticated Encryption", Advances in Cryptology –
              ASIACRYPT 2014. ASIACRYPT 2014. Lecture Notes in Computer
              Science, vol 8873. Springer, Berlin, Heidelberg,
              DOI 10.1007/978-3-662-45611-8_6, 2014,
              <https://doi.org/10.1007/978-3-662-45611-8_6>.

   [ABV21]    Andreeva, E., Bhati, A.S., and D. Vizár, "Nonce-misuse
              security of the SAEF authenticated encryption mode",
              Selected Areas in Cryptography: 27th International
              Conference, Halifax, NS, Canada (Virtual Event), October
              21-23, 2020, Revised Selected Papers 27. Springer
              International Publishing, 2021, 2021.



Bozhko                    Expires 27 July 2024                 [Page 15]

Internet-Draft        Properties of AEAD algorithms         January 2024


   [ADGKLS22] Albertini, A., Duong, T., Gueron, S., Kölbl, S., Luykx,
              A., and S. Schmieg, "How to abuse and fix authenticated
              encryption without key commitment", 1st USENIX Security
              Symposium (USENIX Security 22), pp. 3291-3308. 2022, 2022.

   [ADL17]    Ashur, T., Dunkelman, O., and A. Luykx, "Boosting
              Authenticated Encryption Robustness with Minimal
              Modifications", Advances in Cryptology – CRYPTO 2017.
              CRYPTO 2017. Lecture Notes in Computer Science, vol 10403.
              Springer, Cham, DOI 10.1007/978-3-319-63697-9_1, 2017,
              <https://doi.org/10.1007/978-3-319-63697-9_1>.

   [B20]      Bellizia, D., Bronchain, O., Cassiers, G., Grosso, V.,
              Guo, C., Momin, C., Pereira, O., Peters, T., and FX.
              Standaert, "Mode-Level vs. Implementation-Level Physical
              Security in Symmetric Cryptography: A Practical Guide
              Through the Leakage-Resistance Jungle", Advances in
              Cryptology – CRYPTO 2020. CRYPTO 2020. Lecture Notes in
              Computer Science, vol 12170. Springer, Cham,
              DOI 10.1007/978-3-030-56784-2_13, 2020,
              <https://doi.org/10.1007/978-3-030-56784-2_13>.

   [BBCLNSS21]
              Bhaumik, R., Bonnetain, X., Chailloux, A., Leurent, G.,
              Naya-Plasencia, M., Schrottenlohe, A., and Y. Seurin,
              "QCB: Efficient Quantum-Secure Authenticated Encryption",
              Advances in Cryptology – ASIACRYPT 2021. ASIACRYPT 2021.
              Lecture Notes in Computer Science(), vol 13090. Springer,
              Cham., DOI 10.1007/978-3-030-92062-3_23, 2021,
              <https://doi.org/10.1007/978-3-030-92062-3_23>.

   [BC09]     Forler, C. and E. List, "MAC Reforgeability", Fast
              Software Encryption. FSE 2009. Lecture Notes in Computer
              Science, vol 5665. Springer, Berlin, Heidelberg,
              DOI 10.1007/978-3-642-03317-9_21, 2009,
              <https://doi.org/10.1007/978-3-642-03317-9_21>.

   [BFN98]    Blaze, M., Feigenbaum, J., and M. Naor, "A formal
              treatment of remotely keyed encryption", Advances in
              Cryptology — EUROCRYPT'98. EUROCRYPT 1998. Lecture Notes
              in Computer Science, vol 1403. Springer, Berlin,
              Heidelberg, DOI 10.1007/BFb0054131, 1998,
              <https://doi.org/10.1007/BFb0054131>.








Bozhko                    Expires 27 July 2024                 [Page 16]

Internet-Draft        Properties of AEAD algorithms         January 2024


   [BH22]     Bellare, M. and V.T. Hoang, "Efficient schemes for
              committing authenticated encryption.", Advances in
              Cryptology – EUROCRYPT 2022. EUROCRYPT 2022. Lecture Notes
              in Computer Science, vol 13276. Springer, Cham.,
              DOI 10.1007/978-3-031-07085-3_29, 2022,
              <https://doi.org/10.1007/978-3-031-07085-3_29>.

   [BHT18]    Bose, P., Hoang, V.T., and S. Tessaro, "Revisiting AES-
              GCM-SIV: multi-user security, faster key derivation, and
              better bounds", Annual International Conference on the
              Theory and Applications of Cryptographic Techniques, pp.
              468-499. Cham: Springer International Publishing, 2018,
              2018.

   [BK2011]   Bellare, M. and S. Keelveedhi, "Authenticated and Misuse-
              Resistant Encryption of Key-Dependent Data", Advances in
              Cryptology – CRYPTO 2011. CRYPTO 2011. Lecture Notes in
              Computer Science, vol 6841. Springer, Berlin, Heidelberg.,
              DOI 10.1007/978-3-642-22792-9_35, 2011,
              <https://doi.org/10.1007/978-3-642-22792-9_35>.

   [BKY02]    Buonanno, E., Katz, J., and M. Yung, "Incremental
              Unforgeable Encryption", Fast Software Encryption. FSE
              2001. Lecture Notes in Computer Science, vol 2355.
              Springer, Berlin, Heidelberg, DOI 10.1007/3-540-45473-X_9,
              2002, <https://doi.org/10.1007/3-540-45473-X_9>.

   [BN2000]   Bellare, M. and C. Namprempre, "Authenticated Encryption:
              Relations among Notions and Analysis of the Generic
              Composition Paradigm", Proceedings of ASIACRYPT 2000,
              Springer-Verlag, LNCS 1976, pp. 531-545,
              DOI 10.1007/s00145-008-9026-x, 2000,
              <https://doi.org/10.1007/s00145-008-9026-x>.

   [BNT19]    Bellare, M., Ng, R., and B. Tackmann, "Nonces Are Noticed:
              AEAD Revisited", Advances in Cryptology – CRYPTO 2019.
              CRYPTO 2019. Lecture Notes in Computer Science, vol 11692.
              Springer, Cham, DOI 10.1007/978-3-030-26948-7_9, 2019,
              <https://doi.org/10.1007/978-3-030-26948-7_9>.

   [BPPS17]   Berti, F., Pereira, O., Peters, T., and F.X. Standaert,
              "On leakage-resilient authenticated encryption with
              decryption leakages", IACR Transactions on Symmetric
              Cryptology (2017): 271-293, 2017.

   [BT16]     Bellare, M. and B. Tackmann, "The Multi-User Security of
              Authenticated Encryption: AES-GCM in TLS 1.3", Advances in
              Cryptology – CRYPTO 2016. CRYPTO 2016. Lecture Notes in



Bozhko                    Expires 27 July 2024                 [Page 17]

Internet-Draft        Properties of AEAD algorithms         January 2024


              Computer Science, vol 9814. Springer, Berlin, Heidelberg,
              DOI 10.1007/978-3-662-53018-4_10, 2016,
              <https://doi.org/10.1007/978-3-662-53018-4_10>.

   [C20]      Chakraborti, A., Datta, N., Jha, A., Mancillas-López, C.,
              Nandi, M., and Y. Sasaki, "INT-RUP Secure Lightweight
              Parallel AE Modes", IACR Transactions on Symmetric
              Cryptology, 2019(4), 81–118,
              DOI 10.13154/tosc.v2019.i4.81-118, 2020,
              <https://doi.org/10.13154/tosc.v2019.i4.81-118>.

   [CR22]     Chan, J. and P. Rogaway, "On Committing Authenticated-
              Encryption.", Computer Security – ESORICS 2022. ESORICS
              2022. Lecture Notes in Computer Science, vol 13555.
              Springer, Cham., DOI 10.1007/978-3-031-17146-8_14, 2022,
              <https://doi.org/10.1007/978-3-031-17146-8_14>.

   [D13]      Bernstein, D. J., "Re: secret message numbers", Message in
              Google group on cryptographic competitions, October 2013.
              https://groups.google.com/d/msg/crypto-
              competitions/n5ECGwYr6Vk/bsEfPWqSAU4J., 2013.

   [DA03]     Dodis, Y. and JH. An, "Concealment and Its Applications to
              Authenticated Encryption", Advances in Cryptology —
              EUROCRYPT 2003. EUROCRYPT 2003. Lecture Notes in Computer
              Science, vol 2656. Springer, Berlin, Heidelberg,
              DOI 10.1007/3-540-39200-9_19, 2003,
              <https://doi.org/10.1007/3-540-39200-9_19>.

   [DGGK21]   Dobraunig, C., Grassi, L., Guinet, G., and K. Kuijsters,
              "CIMINION: Symmetric Encryption Based on Toffoli-Gates
              over Large Finite Fields", Advances in Cryptology –
              EUROCRYPT 2021. EUROCRYPT 2021. Lecture Notes in Computer
              Science(), vol 12697. Springer, Cham,
              DOI 10.1007/978-3-030-77886-6_1, 2021,
              <https://doi.org/10.1007/978-3-030-77886-6_1>.

   [DGGP21]   Degabriele, J.P., Govinden, J., Günther, F., and K.
              Paterson, "The security of ChaCha20-Poly1305 in the multi-
              user setting", In Proceedings of the 2021 ACM SIGSAC
              Conference on Computer and Communications Security, pp.
              1981-2003. 2021., 2021.

   [EV16]     Endignoux, G. and D. Vizár, "Linking Online Misuse-
              Resistant Authenticated Encryption and Blockwise Attack
              Models", IACR Transactions on Symmetric Cryptology, 2016.





Bozhko                    Expires 27 July 2024                 [Page 18]

Internet-Draft        Properties of AEAD algorithms         January 2024


   [FFL12]    Fleischmann, E., Forler, C., and S. Lucks, "McOE: A family
              of almost foolproof on-line authenticated encryption
              schemes", Fast Software Encryption: 19th International
              Workshop, FSE 2012, Washington, DC, USA, March 19-21,
              2012. Revised Selected Papers. Springer Berlin Heidelberg,
              2012, 2012.

   [FJMV2004] Valette, PA., Joux, A., Martinet, G., and F. Valette,
              "Authenticated On-Line Encryption", Selected Areas in
              Cryptography. SAC 2003. Lecture Notes in Computer Science,
              vol 3006. Springer, Berlin, Heidelberg.,
              DOI 10.1007/978-3-540-24654-1_11, 2004,
              <https://doi.org/10.1007/978-3-540-24654-1_11>.

   [FLLW17]   Forler, C., List, E., Lucks, S., and J. Wenzel,
              "Reforgeability of Authenticated Encryption Schemes",
              Information Security and Privacy. ACISP 2017. Lecture
              Notes in Computer Science, vol 10343. Springer, Cham,
              DOI 10.1007/978-3-319-59870-3_2, 2017,
              <https://doi.org/10.1007/978-3-319-59870-3_2>.

   [FOR17]    Farshim, P., Orlandi, C., and R. Rosie, "Authenticated and
              Misuse-Resistant Encryption of Key-Dependent DataSecurity
              of Symmetric Primitives under Incorrect Usage of Keys",
              IACR Transactions on Symmetric Cryptology, 2017(1),
              449–473., DOI 10.13154/tosc.v2017.i1.449-473, 2017,
              <https://doi.org/10.13154/tosc.v2017.i1.449-473>.

   [G17]      Gagliardoni, T., "Quantum Security of Cryptographic
              Primitives", Ph.D. Thesis, Technische Universität
              Darmstadt, 2017.

   [GLR17]    Grubbs, P., Lu, J., and T. Ristenpart, "Message Franking
              via Committing Authenticated Encryption.", Advances in
              Cryptology – CRYPTO 2017. CRYPTO 2017. Lecture Notes in
              Computer Science, vol 10403. Springer, Cham,
              DOI 10.1007/978-3-319-63697-9_3, 2017,
              <https://doi.org/10.1007/978-3-319-63697-9_3>.

   [GPPS19]   Guo, C., Pereira, O., Peters, T., and FX. Standaert,
              "Authenticated Encryption with Nonce Misuse and Physical
              Leakages: Definitions, Separation Results and Leveled
              Constructions", Progress in Cryptology – LATINCRYPT 2019.
              LATINCRYPT 2019. Lecture Notes in Computer Science, vol
              11774. Springer, Cham, DOI 10.1007/978-3-030-30530-7_8,
              2019, <https://doi.org/10.1007/978-3-030-30530-7_8>.





Bozhko                    Expires 27 July 2024                 [Page 19]

Internet-Draft        Properties of AEAD algorithms         January 2024


   [HKR2015]  Hoang, VT., Krovetz, T., and P. Rogaway, "Robust
              Authenticated-Encryption AEZ and the Problem That It
              Solves", Advances in Cryptology -- EUROCRYPT 2015.
              EUROCRYPT 2015. Lecture Notes in Computer Science(), vol
              9056. Springer, Berlin, Heidelberg.,
              DOI 10.1007/978-3-662-46800-5_2, 2015,
              <https://doi.org/10.1007/978-3-662-46800-5_2>.

   [HRRV15]   Hoang, VT., Reyhanitabar, R., Rogaway, P., and D. Vizár,
              "Online Authenticated-Encryption and its Nonce-Reuse
              Misuse-Resistance", Advances in Cryptology -- CRYPTO 2015.
              CRYPTO 2015. Lecture Notes in Computer Science, vol 9215.
              Springer, Berlin, Heidelberg,
              DOI 10.1007/978-3-662-47989-6_24, 2015,
              <https://doi.org/10.1007/978-3-662-47989-6_24>.

   [HTT18]    Hoang, V.T., Tessaro, S., and A. Thiruvengadam, "The
              multi-user security of GCM, revisited: Tight bounds for
              nonce randomization", Proceedings of the 2018 ACM SIGSAC
              Conference on Computer and Communications Security, pp.
              1429-1440. 2018, 2018.

   [I-D.irtf-cfrg-aead-limits]
              Günther, F., Thomson, M., and C. A. Wood, "Usage Limits on
              AEAD Algorithms", Work in Progress, Internet-Draft, draft-
              irtf-cfrg-aead-limits-07, 31 May 2023,
              <https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-
              aead-limits-07>.

   [JMV2002]  Joux, A., Martinet, G., and F. Valette, "Blockwise-
              Adaptive Attackers Revisiting the (In)Security of Some
              Provably Secure Encryption Modes: CBC, GEM, IACBC",
              Advances in Cryptology — CRYPTO 2002. CRYPTO 2002. Lecture
              Notes in Computer Science, vol 2442. Springer, Berlin,
              Heidelberg, DOI 10.1007/3-540-45708-9_2, 2002,
              <https://doi.org/10.1007/3-540-45708-9_2>.

   [KLLNP16]  Menda, M., Leurent, G., Leverrier, A., and M. Naya-
              Plasencia, "Quantum Differential and Linear
              Cryptanalysis", IACR Transactions on Symmetric Cryptology,
              2016(1), 71–94., DOI 10.13154/tosc.v2016.i1.71-94, 2021,
              <https://doi.org/10.13154/tosc.v2016.i1.71-94>.

   [LGR21]    Len, J., Grubbs, P., and T. Ristenpart, "Partitioning
              Oracle Attacks", 30th USENIX Security Symposium (USENIX
              Security 21), 195--212, 2021.





Bozhko                    Expires 27 July 2024                 [Page 20]

Internet-Draft        Properties of AEAD algorithms         January 2024


   [LMP17]    Luykx, A., Mennink, B., and K. Paterson, "Analyzing multi-
              key security degradation", Conference on the Theory and
              Applications of Cryptology and Information Security, Hong
              Kong, China, December 3-7, 2017, Proceedings, Part II 23,
              pp. 575-605. Springer International Publishing, 2017.,
              2017.

   [MBTM17]   McKay, K., Bassham, L., Turan, MS., and N. Mouha, "Report
              on Lightweight Cryptography", DOI 10.6028/NIST.IR.8114,
              2017, <https://doi.org/10.6028/NIST.IR.8114>.

   [MLGR23]   Menda, S., Julia, J., Grubbs, P., and T. Ristenpart,
              "Robust Authenticated-Encryption AEZ and the Problem That
              It Solves", Advances in Cryptology – EUROCRYPT 2023.
              EUROCRYPT 2023. Lecture Notes in Computer Science, vol
              14007. Springer, Cham., DOI 10.1007/978-3-031-30634-1_13,
              2023, <https://doi.org/10.1007/978-3-031-30634-1_13>.

   [R2002]    Rogaway, P., "Authenticated-encryption with associated-
              data.", Proceedings of the 9th ACM conference on Computer
              and communications security (CCS '02), Association for
              Computing Machinery, New York, NY, USA, 98–107,
              DOI 10.1145/586110.586125, 2002,
              <https://doi.org/10.1145/586110.586125>.

   [RFC4303]  Kent, S., "IP Encapsulating Security Payload (ESP)",
              RFC 4303, DOI 10.17487/RFC4303, December 2005,
              <https://www.rfc-editor.org/info/rfc4303>.

   [RFC5652]  Housley, R., "Cryptographic Message Syntax (CMS)", STD 70,
              RFC 5652, DOI 10.17487/RFC5652, September 2009,
              <https://www.rfc-editor.org/info/rfc5652>.

   [RFC8221]  Wouters, P., Migault, D., Mattsson, J., Nir, Y., and T.
              Kivinen, "Cryptographic Algorithm Implementation
              Requirements and Usage Guidance for Encapsulating Security
              Payload (ESP) and Authentication Header (AH)", RFC 8221,
              DOI 10.17487/RFC8221, October 2017,
              <https://www.rfc-editor.org/info/rfc8221>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

   [RFC9000]  Iyengar, J., Ed. and M. Thomson, Ed., "QUIC: A UDP-Based
              Multiplexed and Secure Transport", RFC 9000,
              DOI 10.17487/RFC9000, May 2021,
              <https://www.rfc-editor.org/info/rfc9000>.



Bozhko                    Expires 27 July 2024                 [Page 21]

Internet-Draft        Properties of AEAD algorithms         January 2024


   [RS06]     Rogaway, R. and T. Shrimpton, "A Provable-Security
              Treatment of the Key-Wrap Problem", Advances in Cryptology
              - EUROCRYPT 2006. EUROCRYPT 2006. Lecture Notes in
              Computer Science, vol 4004. Springer, Berlin, Heidelberg,
              DOI 10.1007/11761679_23, 2016,
              <https://doi.org/10.1007/11761679_23>.

   [SY16]     Sasaki, Y. and K. Yasuda, "A New Mode of Operation for
              Incremental Authenticated Encryption with Associated
              Data", Selected Areas in Cryptography – SAC 2015. SAC
              2015. Lecture Notes in Computer Science(), vol 9566.
              Springer, Cham, DOI 10.1007/978-3-319-31301-6_23, 2016,
              <https://doi.org/10.1007/978-3-319-31301-6_23>.

   [YSS23]    Naito, Y., Sasaki, Y., and T. Sugawara, "Committing
              Security of Ascon: Cryptanalysis on Primitive and Proof on
              Mode", IACR Transactions on Symmetric Cryptology 2023, no.
              4 (2023): 420-451, 2023.

Appendix A.  Contributors

Author's Address

   Andrey Bozhko (editor)
   CryptoPro
   Email: andbogc@gmail.com

























Bozhko                    Expires 27 July 2024                 [Page 22]
